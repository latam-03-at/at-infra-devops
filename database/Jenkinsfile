pipeline {
    agent { label 'linux-agent' }
    parameters {
        choice(name: 'Environment', choices: ['Development', 'Production'], description: 'Choose an environment where deploy the Database')
        string(name: 'BuildNumber', defaultValue: ':', description: '')
    }
    environment {
        DEPLOY_TO = "${params.Environment}"
        IMAGE_NAME = "converter-service:${params.BuildNumber}"
        //SERVER_DEV = "calebespinoza@20.228.132.238"
    }
    stages {

        stage ('Download Image') {
            steps {
                sshagent(['az-ubuntu-dev-vm']) {
                    sh "ssh -o 'StrictHostKeyChecking no' $SERVER_DEV docker pull converter-service:${params.BuildNumber}"
                }
            }
        }
        stage ('Deploy to Development') {
            when {
                environment name: 'DEPLOY_TO', value: 'Development'
            }
            environment {
                FOLDER_NAME = "mongodbdev"
            }
            steps {
                echo "Environment: ${DEPLOY_TO}"
                //sshagent(['az-ubuntu-dev-vm']) {
                //    sh "ssh -o 'StrictHostKeyChecking no' calebespinoza@20.228.132.238 mkdir -p /home/calebespinoza/$FOLDER_NAME"
                //    sh "scp database/docker-compose.yml calebespinoza@20.228.132.238:~/$FOLDER_NAME"
                //    sh "ssh -o 'StrictHostKeyChecking no' calebespinoza@20.228.132.238 ls -a /home/calebespinoza/$FOLDER_NAME"
                //    sh "ssh -o 'StrictHostKeyChecking no' calebespinoza@20.228.132.238 docker-compose -f /home/calebespinoza/$FOLDER_NAME/docker-compose.yml up -d"
                //}
            }
        }

        stage ('Deploy to Production') {
            when {
                environment name: 'DEPLOY_TO', value: 'Production'
            }
            steps {
                echo "Environment: ${DEPLOY_TO}"
            }
        }
    }
}